name: CD_DEV

on:
  workflow_dispatch:
  push: 
    branches:
        - main

permissions: write-all #테스트 결과 작성을 위해 쓰기권한 추가

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: create firebase key
        run: |
          cd ./src/main/resources
          mkdir firebase
          cd firebase
          touch ./crewing-2dbfa-firebase-adminsdk-l1mc1-526917b443.json
          echo "${{ secrets.FIREBASE_KEY }}" > ./crewing-2dbfa-firebase-adminsdk-l1mc1-526917b443.json
        shell: bash

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build With Gradle
        run: ./gradlew build -x test

      - name: Docker build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/crewing-server .
          docker push ${{ secrets.DOCKER_REPO }}/crewing-server
      - name: Deploy to Prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.EC2_HOST_DEV }}
          username: ${{ secrets.EC2_USERNAME_DEV }}
          key: ${{ secrets.EC2_PRIVATE_KEY_DEV }}
          envs: GITHUB_SHA
          script: |
            cd ./project
            sudo docker stop crewing-server
            sudo docker rm crewing-server
            sudo docker rmi $(sudo docker images -q)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/crewing-server
            sudo docker run -i -t --env-file ./crewing.env -p 8080:8080 -d --name crewing-server ${{ secrets.DOCKER_REPO }}/crewing-server:latest

